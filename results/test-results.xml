<testsuites id="" name="" tests="5" failures="2" skipped="0" errors="0" time="79.056388">
<testsuite name="main.spec.js" timestamp="2025-02-04T23:34:35.259Z" hostname="Chromium" tests="5" failures="2" skipped="0" time="156.061" errors="0">
<testcase name="Website Testing Suite › Extract and save distinct links" classname="main.spec.js" time="10.906">
<system-out>
<![CDATA[Navigating to URL: https://www.blueparadox.com/
Extracted 9 unique links.

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-Extract-and-save-distinct-links-Chromium\test-finished-1.png]]
]]>
</system-out>
<system-err>
<![CDATA[Error during extraction: i is not defined
]]>
</system-err>
</testcase>
<testcase name="Website Testing Suite › Check all links for broken URLs" classname="main.spec.js" time="35.292">
<failure message="main.spec.js:16:5 Check all links for broken URLs" type="FAILURE">
<![CDATA[  [Chromium] › main.spec.js:16:5 › Website Testing Suite › Check all links for broken URLs ─────────

    Error: https://www.facebook.com/theblueparadox returned a non-success status code

    expect(received).toBeTruthy()

    Received: false

       at ..\utils\helpers\linkCheckerUtils.js:56

      54 |             try {
      55 |                 const response = await page.request.get(url);
    > 56 |                 expect.soft(response.ok(), `${url} returned a non-success status code`).toBeTruthy();
         |                                                                                         ^
      57 |                 if (response.ok()) {
      58 |                     passedLinks++;
      59 |                 } else {
        at C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:56:89
        at checkLinks (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:53:9)
        at runLinkCheck (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:115:42)
        at C:\2025Playwright-Projects\SCJohnson\tests\main.spec.js:18:9

    Error: Some links returned errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

       at ..\utils\helpers\linkCheckerUtils.js:94

      92 |
      93 |     // Soft assert for failed links
    > 94 |     expect.soft(failedLinks.length, "Some links returned errors").toBe(0);
         |                                                                   ^
      95 | }
      96 |
      97 | /**
        at logTestSummary (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:94:67)
        at runLinkCheck (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:121:5)
        at C:\2025Playwright-Projects\SCJohnson\tests\main.spec.js:18:9

    attachment #1: checked-links.txt (text/plain) ──────────────────────────────────────────────────
    https://www.blueparadox.com/
    https://www.blueparadox.com/en/plastic-waste-crisis
    https://www.blueparadox.com/en/solutions
    https://www.blueparadox.com/en/resources
    https://www.blueparadox.com/en/in-the-news
    https://www.blueparadox.com/en/the-exhibit
    https://www.blueparadox.com/en/about-the-movement
    h...
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium\trace.zip
    Usage:

        npx playwright show-trace test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: https://www.facebook.com/theblueparadox returned a non-success status code

    expect(received).toBeTruthy()

    Received: false

       at ..\utils\helpers\linkCheckerUtils.js:56

      54 |             try {
      55 |                 const response = await page.request.get(url);
    > 56 |                 expect.soft(response.ok(), `${url} returned a non-success status code`).toBeTruthy();
         |                                                                                         ^
      57 |                 if (response.ok()) {
      58 |                     passedLinks++;
      59 |                 } else {
        at C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:56:89
        at checkLinks (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:53:9)
        at runLinkCheck (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:115:42)
        at C:\2025Playwright-Projects\SCJohnson\tests\main.spec.js:18:9

    Error: Some links returned errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

       at ..\utils\helpers\linkCheckerUtils.js:94

      92 |
      93 |     // Soft assert for failed links
    > 94 |     expect.soft(failedLinks.length, "Some links returned errors").toBe(0);
         |                                                                   ^
      95 | }
      96 |
      97 | /**
        at logTestSummary (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:94:67)
        at runLinkCheck (C:\2025Playwright-Projects\SCJohnson\utils\helpers\linkCheckerUtils.js:121:5)
        at C:\2025Playwright-Projects\SCJohnson\tests\main.spec.js:18:9

    attachment #1: checked-links.txt (text/plain) ──────────────────────────────────────────────────
    https://www.blueparadox.com/
    https://www.blueparadox.com/en/plastic-waste-crisis
    https://www.blueparadox.com/en/solutions
    https://www.blueparadox.com/en/resources
    https://www.blueparadox.com/en/in-the-news
    https://www.blueparadox.com/en/the-exhibit
    https://www.blueparadox.com/en/about-the-movement
    h...
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[🔍 Running tests for environment: qa
🌍 Testing BASE_URL: https://www.blueparadox.com/
🔗 Total Links Found: 20

=== ✅ Link Check Summary ✅ ===
🔗 Total Links Checked: 20
✅ Passed Links: 19
❌ Failed Links: 1
❌ Failed URLs:
https://www.facebook.com/theblueparadox

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium\test-failed-1.png]]

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium\trace.zip]]
🔍 Running tests for environment: qa
🌍 Testing BASE_URL: https://www.blueparadox.com/
🔗 Total Links Found: 14

=== ✅ Link Check Summary ✅ ===
🔗 Total Links Checked: 14
✅ Passed Links: 13
❌ Failed Links: 1
❌ Failed URLs:
https://www.facebook.com/theblueparadox

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium-retry1\test-failed-1.png]]

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-Check-all-links-for-broken-URLs-Chromium-retry1\trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Website Testing Suite › Check all footer links for broken URLs" classname="main.spec.js" time="22.717">
<system-out>
<![CDATA[Total Footer links found: 14
Working link in Footer: https://www.instagram.com/theblueparadox (Status: 200)
Working link in Footer: https://twitter.com/theblueparadox (Status: 200)
Working link in Footer: /en/plastic-waste-crisis (Status: 200)
Working link in Footer: /en/solutions (Status: 200)
Working link in Footer: /en/resources (Status: 200)
Working link in Footer: /en/in-the-news (Status: 200)
Working link in Footer: /en/the-exhibit (Status: 200)
Working link in Footer: /en/about-the-movement (Status: 200)
Working link in Footer: /en/take-action (Status: 200)
Working link in Footer: #calculatorModal (Status: 200)
Working link in Footer: https://terms.scjbrands.com/en-us (Status: 200)
Working link in Footer: https://privacy.scjbrands.com/en-us (Status: 200)
Working link in Footer: https://contact.scjbrands.com/en-us (Status: 200)

Footer Test Summary:
Total Working Links: 13
Total Broken Links: 1

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-d9242-ooter-links-for-broken-URLs-Chromium\test-finished-1.png]]
]]>
</system-out>
<system-err>
<![CDATA[Broken link in Footer: https://www.facebook.com/theblueparadox (Status: 400)
]]>
</system-err>
</testcase>
<testcase name="Website Testing Suite › Check all header links for broken URLs" classname="main.spec.js" time="13.815">
<system-out>
<![CDATA[Total Header links found: 0

Header Test Summary:
Total Working Links: 0
Total Broken Links: 0

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-2588c-eader-links-for-broken-URLs-Chromium\test-finished-1.png]]
]]>
</system-out>
</testcase>
<testcase name="Website Testing Suite › SC Johnson Homepage Screenshot Test" classname="main.spec.js" time="73.331">
<failure message="main.spec.js:31:5 SC Johnson Homepage Screenshot Test" type="FAILURE">
<![CDATA[  [Chromium] › main.spec.js:31:5 › Website Testing Suite › SC Johnson Homepage Screenshot Test ─────

    Error: ❌ Visual mismatch detected! Images differ by 98.48%

       at ..\utils\helpers\visualTesting.js:72

      70 |
      71 |         if (diff.misMatchPercentage > 0) {
    > 72 |             throw new Error(`❌ Visual mismatch detected! Images differ by ${diff.misMatchPercentage}%`);
         |                   ^
      73 |         }
      74 |         console.log("✅ Screenshots match!");
      75 |     } else {
        at captureAndCompareScreenshot (C:\2025Playwright-Projects\SCJohnson\utils\helpers\visualTesting.js:72:19)
        at C:\2025Playwright-Projects\SCJohnson\tests\main.spec.js:33:9

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium\trace.zip
    Usage:

        npx playwright show-trace test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: ❌ Visual mismatch detected! Images differ by 98.51%

       at ..\utils\helpers\visualTesting.js:72

      70 |
      71 |         if (diff.misMatchPercentage > 0) {
    > 72 |             throw new Error(`❌ Visual mismatch detected! Images differ by ${diff.misMatchPercentage}%`);
         |                   ^
      73 |         }
      74 |         console.log("✅ Screenshots match!");
      75 |     } else {
        at captureAndCompareScreenshot (C:\2025Playwright-Projects\SCJohnson\utils\helpers\visualTesting.js:72:19)
        at C:\2025Playwright-Projects\SCJohnson\tests\main.spec.js:33:9

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[📸 Screenshot saved at: C:\2025Playwright-Projects\SCJohnson\utils\screenshots\scjohnson_homepage_chromium.png

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium\test-failed-1.png]]

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium\trace.zip]]
📸 Screenshot saved at: C:\2025Playwright-Projects\SCJohnson\utils\screenshots\scjohnson_homepage_chromium.png

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium-retry1\test-failed-1.png]]

[[ATTACHMENT|..\test-results\main-Website-Testing-Suite-34327-on-Homepage-Screenshot-Test-Chromium-retry1\trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>